- model_class = Proposal
#home.tab-pane.active role="tabpanel"
  .table
    table.table
      thead
        tr
          / th= model_class.human_attribute_name(:id)
          th.text-center= model_class.human_attribute_name(:unit)
          th.text-center= model_class.human_attribute_name(:email)
          th.text-center= model_class.human_attribute_name(:state)
          / th.text-center= model_class.human_attribute_name(:negociate)
          th.text-right= model_class.human_attribute_name(:value)
          th.text-center= model_class.human_attribute_name(:due_at)
          th.text-center= model_class.human_attribute_name(:updated_at)
          th.text-center=t 'actions', :scope => "helpers.menu"
      tbody
        - @collection.each do |proposal|
          tr
            / td.text-center= proposal.id
            td.text-center= proposal.unit.name
            td.text-center= proposal.broker.user.email
            td.text-uppercase= editable proposal, :states, url: admin_proposal_path(proposal), type: 'select', class: 'editable', source: model_class::STATUS.map{|key,value|{value:key, text: I18n.t(key, scope:'views.common').upcase}}, value: proposal.state
            / td.text-center= proposal.negociate
            td.text-right= number_with_precision proposal.value
            td.text-center=localize proposal.due_at, format: :default
            td.text-center=localize proposal.updated_at, format: :date
            td.text-center
              = link_to edit_admin_proposal_path(proposal), class: 'btn btn-default' do
                i.fa.fa-edit
                / '
                / = t('edit', scope: "helpers.links")
              '
              - if proposal.accepted? or proposal.closed?
                = link_to document_admin_proposal_path(proposal), class: 'btn' do
                  i.fa.fa-archive
                  '
                  = t('Document', scope: "helpers.links")

.clearfix
.form-group.p-l-25.p-t-25.p-r-25
  = link_to admin_builds_path, :class => 'btn' do
    i.fa.fa-mail-reply
    '
    = t('back', scope: "helpers.links")
    
javascript:
  $(function(){
    $('.editable').editable({
      mode: 'inline',
      showbuttons: false,
      error: function(response, newValue) { 
        var string = ''
        $.each(response.responseJSON.errors, function(key, value){ 
          string = string + '<li>'+ value +'</li>'
        })
        $('.editable-error-block').html("<ul class='no-style'>" + string + "</ul>")
      }
    })
  })