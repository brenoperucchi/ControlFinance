.table
  table.table
    thead
      tr
        th= model_class.human_attribute_name(:email)
        th= model_class.human_attribute_name(:value)
        th= model_class.human_attribute_name(:state)
        th= model_class.human_attribute_name(:negociate)
        th= model_class.human_attribute_name(:value)
        th= model_class.human_attribute_name(:created_at)
        th=t 'actions', :scope => "helpers.links"
    tbody
      - @collection.each do |proposal|
        tr
          td= proposal.broker.try(:user).try(:email)
          td= proposal.value
          td= editable proposal, :status, url: admin_proposal_path(proposal), type: 'select', class: 'editable', source: model_class::STATUS.map{|key,value|key}, value: proposal.state
          td= proposal.negociate
          td= proposal.value
          td=l proposal.created_at, format: :short
          td
            .btn-group.m-r-10
              button.btn.btn-default.btn-outline.dropdown-toggle.waves-effect.waves-light aria-expanded="true" data-toggle="dropdown" type="button" 
                span.caret
              ul.dropdown-menu role="menu" 
                li
                  = link_to t('edit', scope: "helpers.links"), edit_admin_proposal_path(proposal)                       
                  - if proposal.accepted? or proposal.closed?
                    = link_to t('Document', scope: "helpers.links"), document_admin_proposal_path(proposal)
javascript:
  $(function(){
    $('.editable_button').editable({
      mode: 'popup',
      showbuttons: true,
      error: function(response, newValue) { 
        var error_msgs = []
        $.each(response.responseJSON, function(key, value){ 
          error_msgs.push(key+' '+value)
        })
        return error_msgs.join("; ");
      }
    })
    $('.editable').editable({
      mode: 'inline',
      showbuttons: false,
      error: function(response, newValue) { 
        var error_msgs = []
        $.each(response.responseJSON.errors, function(key, value){ 
          error_msgs.push(key+' '+value)
        })
        return error_msgs.join("; ");
      }
    })
  })