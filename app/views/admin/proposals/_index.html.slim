.table
  table.table
    thead
      tr
        th= model_class.human_attribute_name(:email)
        th= model_class.human_attribute_name(:state)
        th= model_class.human_attribute_name(:negociate)
        th= model_class.human_attribute_name(:value)
        th= model_class.human_attribute_name(:created_at)
        th=t 'actions', :scope => "helpers.links"
    tbody
      - @collection.each do |proposal|
        tr
          td= proposal.broker.try(:user).try(:email)
          td.text-uppercase= editable proposal, :states, url: admin_proposal_path(proposal), type: 'select', class: 'editable', source: model_class::STATUS.map{|key,value|{value:key, text: I18n.t(key, scope:'views.common').upcase}}, value: proposal.state
          td= proposal.negociate
          td= number_to_currency proposal.value
          td=l proposal.created_at, format: :short
          td
            = link_to edit_admin_proposal_path(proposal), class: 'btn' do 
              i.fa.fa-edit
              '
              = t('edit', scope: "helpers.links")
            '
            - if proposal.accepted?
              = link_to invoice_admin_proposal_path(proposal, invoice: :accepted), class: 'btn' do 
                i.fa.fa-print
                '
                = t('print', scope: "helpers.links")  
            - else
              = link_to invoice_admin_proposal_path(proposal, invoice: :created), class: 'btn' do 
                i.fa.fa-print
                '
                = t('print', scope: "helpers.links")
            
            '
            - if proposal.accepted? or proposal.closed?
              '
              = link_to t('Document', scope: "helpers.links"), document_admin_proposal_path(proposal)
javascript:
  $(function(){
    // $('.editable_button').editable({
    //   mode: 'popup',
    //   showbuttons: true,
    //   error: function(response, newValue) { 
    //     var error_msgs = []
    //     $.each(response.responseJSON, function(key, value){ 
    //       error_msgs.push(value)
    //     })
    //     return error_msgs.join("; ");
    //   }
    // })
    $('.editable').editable({
      mode: 'inline',
      showbuttons: false,
      error: function(response, newValue) { 
        var string = ''
        $.each(response.responseJSON.errors, function(key, value){ 
          string = string + '<li>'+ value +'</li>'
        })
        $('.editable-error-block').html("<ul class='no-style'>" + string + "</ul>")
      }
    })
  })